<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kerkerj</title>
    <link>http://blog.kerkerj.in/categories/virtualbox/index.xml</link>
    <description>Recent content on kerkerj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <atom:link href="http://blog.kerkerj.in/categories/virtualbox/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>[Vagrant] 使用 Vagrant 安裝 Nginx, php5-fpm, MySQL</title>
      <link>http://blog.kerkerj.in/blog/vagrant-%E4%BD%BF%E7%94%A8-vagrant-%E5%AE%89%E8%A3%9D-nginx-php5-fpm-mysql/</link>
      <pubDate>Tue, 22 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kerkerj.in/blog/vagrant-%E4%BD%BF%E7%94%A8-vagrant-%E5%AE%89%E8%A3%9D-nginx-php5-fpm-mysql/</guid>
      <description>

&lt;h2 id=&#34;vagrant-1-development-environments-made-easy&#34;&gt;&lt;a href=&#34;http://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; - Development environments made easy.&lt;/h2&gt;

&lt;p&gt;就是這個軟體的宗旨，把它想做是 ghost 吧！我們開發網站或是測試一些多機器架構時，常不小心就把自己的電腦或是測試主機搞到爛掉，租機器又慢又花錢，搞到爛重灌更麻煩。因此這個軟體基於 VirtualBox 做出了令人方便設定的功能，讓我們可以快速架設安裝環境並測試，尤其是以多機器架構而言更是方便！例如從最簡單的 Web server + DB server，或是 Web Load Balancer + Application Server * 5 等等的架構，一台電腦就能達成囉！
今天主要是以安裝 Vagrant 及架設出 Nginx + php5-fpm 的架構，下一篇打算另外建構一台 mongodb server，達到 Vagrant 最主要的多機器設定功能~&lt;/p&gt;

&lt;h2 id=&#34;vagrant-基本設定&#34;&gt;Vagrant 基本設定&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;先下載 VirtualBox 吧！&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;下載 Vagarnt 套件 &lt;a href=&#34;http://downloads.vagrantup.com/&#34;&gt;http://downloads.vagrantup.com/&lt;/a&gt;&lt;br /&gt;
安裝好後，可能會需要加 path，至少 1.3.0 當時我是自己加的，現在 1.3.5 就不清楚了~&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;接下來就可以開始加入 box (可以把它想為 ghost 檔)，並開始設定 Vagrant。&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;vagrant box add {你想要的Box名稱} {下載網址} 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;輸入後就會開始下載該 box 了！ 範例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$vagrant box add devbox http://ﬁles.vagrantup.com/precise64.box   
$mkdir my_box  
$cd my_box  
$vagrant init devbox (將 my_box 這個專案資料夾以 devbox 這個 box 檔案初始化)  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;box 官方有提供 Ubuntu 的，在 &lt;a href=&#34;http://www.vagrantbox.es/&#34;&gt;vagrantbox.es&lt;/a&gt; 很多，可以自己找～ 當然自己做應該也是可以的！&lt;/p&gt;

&lt;h2 id=&#34;vagrant-基本指令&#34;&gt;Vagrant 基本指令&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;vagrant up 開機  
vagrant ssh 登⼊  
vagrant suspend 暫停  
vagrant halt 關機  
vagrant destroy 刪除  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;進入新裝好的機器吧&#34;&gt;進入新裝好的機器吧！&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$vagrant up  //開機  
$vagrant ssh //登入  
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;vagrantfile-設定&#34;&gt;Vagrantfile 設定&lt;/h2&gt;

&lt;p&gt;Vagrantfile 這個設定檔可以用很多很強大的設定，在官方網頁裡有教學&lt;/p&gt;

&lt;p&gt;不過首先要先做的是： &lt;code&gt;config.vm.forward_port 80, 8088&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;把虛擬機器裡從 80 port 傳送的東西丟到本機的 8088 port&lt;/p&gt;

&lt;p&gt;如此一來在本機瀏覽器輸入 localhost:8088 ，就可以看到網頁了！&lt;/p&gt;

&lt;p&gt;另外就是： &lt;code&gt;config.vm.synced_folder &amp;quot;/vagrant&amp;quot;, &amp;quot;本機目錄&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如此一來，Ubuntu 底下就有一個 /vargrant 目錄，和自己主機裡的某個目錄是同步的！&lt;/p&gt;

&lt;p&gt;也就是在自己主機上寫好程式後，就可以直接讓虛擬機器抓到 code 去執行，超方便的！&lt;/p&gt;

&lt;p&gt;只要把 nginx 的網頁目錄設定在 /vagrant 上就可以了！ (後面會說)&lt;/p&gt;

&lt;h2 id=&#34;ubuntu-基本安裝&#34;&gt;Ubuntu 基本安裝&lt;/h2&gt;

&lt;p&gt;進去後是乾淨的 Ubuntu 12.04 64位元版，因此需先做點安裝:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo apt-get -y update  
$sudo apt-get --no-install-recommends -y install build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev libgdbm-dev ncurses-dev automake libtool bison subversion pkg-config libffi-dev vim  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有些東西其實可以不用裝，就看個人的需求，必裝應該是 build-essential, openssl, curl, git-core, vim XD&lt;/p&gt;

&lt;h2 id=&#34;nginx-php5-fpm-安裝&#34;&gt;Nginx &amp;amp; php5-fpm 安裝&lt;/h2&gt;

&lt;p&gt;安裝 Nginx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo apt-get install nginx  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若要更改 Nginx 的網頁目錄，設定檔在 &lt;code&gt;/etc/nginx/&lt;/code&gt; 裡，&lt;/p&gt;

&lt;p&gt;通常應該是更改 &lt;code&gt;/etc/nginx/sites-enable/default&lt;/code&gt; 裡的 &lt;code&gt;root /usr/share/nginx/www/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;還要將這段 code 解除註解：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # NOTE: You should have &amp;quot;cgi.fix_pathinfo = 0;&amp;quot; in php.ini

    # With php5-cgi alone:
    #fastcgi_pass 127.0.0.1:9000;
    # With php5-fpm:
    fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更改後確認一下 &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; 是否有 &lt;code&gt;inculde /etc/nginx/sites-enable/*&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo service nginx start (開始服務)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安裝 php5-fpm&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo apt-get install php5-fpm  
$sudo vim /etc/php5/fpm/php.ini (找到並更改 cgi.fix_pathinfo = 0 )  
$sudo vim /etc/php5/fpm/pool.d/www.conf  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到 &lt;code&gt;listen = 127.0.0.1:9000&lt;/code&gt;, 換成 &lt;code&gt;/var/run/php5-fpm.sock&lt;/code&gt;
寫個 phpinfo(); 的 php 檔放入資料夾&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo service php5-fpm restart (開啟服務)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在瀏覽器輸入 localhost:8088 就可以看到 nginx 的頁面，再讀取剛剛寫的 php 應該就成功囉！&lt;/p&gt;

&lt;p&gt;安裝 MySQL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;過程中會問 root 的密碼，裝完後就可以登入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下回就是多機器的設定囉～&lt;/p&gt;

&lt;p&gt;reference:&lt;br /&gt;
&lt;a href=&#34;http://gogojimmy.net/2013/05/26/vagrant-tutorial/&#34;&gt;http://gogojimmy.net/2013/05/26/vagrant-tutorial/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/ihower/vagrant-osdc&#34;&gt;http://www.slideshare.net/ihower/vagrant-osdc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/community/articles/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-12-04&#34;&gt;https://www.digitalocean.com/community/articles/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-12-04&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;p.s. Vagrantfile 產生器：&lt;a href=&#34;https://puphpet.com/#vagrantfile&#34;&gt;Puphpet.com/#vagrantfile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;這網站有很多值得玩的地方，可以直接幫你產生出這些設定檔真的是太方便了！&lt;/p&gt;

&lt;p&gt;p.s.s.有亂入用到的指令記一下：dpkg &amp;ndash;get-selections 列出已安裝的 package&lt;/p&gt;

&lt;p&gt;另外提供一下我在研究 Vagrant 的筆記，很亂超級亂，但是有些東西沒有寫在 blog 裡~
&lt;a href=&#34;https://www.evernote.com/shard/s81/sh/91ccf490-d9cd-468e-943a-d57c79d052f4/71e0a682b024c6e97fd8c79b90f89f67&#34;&gt;Evernote by kerkerj&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>