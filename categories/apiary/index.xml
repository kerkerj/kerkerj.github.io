<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kerkerj</title>
    <link>http://blog.kerkerj.in/categories/apiary/index.xml</link>
    <description>Recent content on kerkerj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <atom:link href="http://blog.kerkerj.in/categories/apiary/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>[API-d16] - 實戰開發 - 設定主題及規劃</title>
      <link>http://blog.kerkerj.in/blog/api-d16---%E5%AF%A6%E6%88%B0%E9%96%8B%E7%99%BC---%E8%A8%AD%E5%AE%9A%E4%B8%BB%E9%A1%8C%E5%8F%8A%E8%A6%8F%E5%8A%83/</link>
      <pubDate>Thu, 16 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.kerkerj.in/blog/api-d16---%E5%AF%A6%E6%88%B0%E9%96%8B%E7%99%BC---%E8%A8%AD%E5%AE%9A%E4%B8%BB%E9%A1%8C%E5%8F%8A%E8%A6%8F%E5%8A%83/</guid>
      <description>&lt;p&gt;接下來我們想要做到的是一個 TODO list 的 RESTful API&lt;/p&gt;

&lt;p&gt;並且會先使用 &lt;a href=&#34;http://apiary.io/&#34;&gt;apiary.io&lt;/a&gt; 做規劃&lt;/p&gt;

&lt;p&gt;實際看看感覺如何&lt;/p&gt;

&lt;p&gt;進入網站後，註冊登入後&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-07%201.04.07.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;左上角的 dropdown list 選擇 create new API&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-07%201.04.18.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;產生後下方就會跑出範例文擋&lt;/p&gt;

&lt;p&gt;這個網站會透過特定格式的編排自己希望的 API endpoint 及範例回傳值後，產生出一份漂亮的文件&lt;/p&gt;

&lt;p&gt;網站中間是模式的選擇&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-07%201.10.33.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Documentation 是實際讓其他人看的，Editor 則是編輯模式&lt;/p&gt;

&lt;p&gt;我們就稍微簡單規劃一下 TODO List 的 RESTful API 吧!&lt;/p&gt;

&lt;p&gt;這是我自己規劃的 &lt;a href=&#34;http://docs.todolist7.apiary.io/&#34;&gt;文件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;基本上 route 會長這個樣子:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TODOs
GET /user/{user_id}/todos/
POST /user/{user_id}/todos/
GET /user/{user_id}/todos/{id}
PUT /user/{user_id}/todos/{id}
DELETE /user/{user_id}/todos/{id}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;資料格式也都在該文件整理好了&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/user/{user_id}/&lt;/code&gt; 只是用來辨識是哪個 user 的 todo task data&lt;/p&gt;

&lt;p&gt;在這個小 API 不會琢磨在使用者系統的建立，只會專注在操作 todo task data&lt;/p&gt;

&lt;p&gt;我們可以直接透過 PostMan 來丟丟看&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-07%201.43.06.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我們設定必須要使用 API-key 才能存取 API，比較進階的做法就是使用 Oauth 的方式取得 token 來存取 API&lt;/p&gt;

&lt;p&gt;不過在這個小 API 也不會建立一個 Oauth Server，我們簡單使用 API-key 來認證即可&lt;/p&gt;

&lt;p&gt;接下來的時間我們就會開始依據規劃好的文件，使用 Node.js + express + mongodb 來實作囉!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>