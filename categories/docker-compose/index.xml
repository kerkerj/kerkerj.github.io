<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker Compose on kerkerj</title>
    <link>https://blog.kerkerj.in/categories/docker-compose/</link>
    <description>Recent content in Docker Compose on kerkerj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Oct 2016 23:36:40 +0800</lastBuildDate>
    
	<atom:link href="https://blog.kerkerj.in/categories/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker HA proxy</title>
      <link>https://blog.kerkerj.in/2016/10/docker-ha-proxy/</link>
      <pubDate>Tue, 18 Oct 2016 23:36:40 +0800</pubDate>
      
      <guid>https://blog.kerkerj.in/2016/10/docker-ha-proxy/</guid>
      <description>不知道標題該下啥&amp;hellip;
前陣子因為工作需要，需要測試一個 web app 分布在多台機器下的狀況
想說使用 docker 來做這件事，但又懶得弄 nginx 的設定
稍微查了一下發現有 dockercloud/haproxy
我使用的情境是 web app * 3 + ha * 1 + redis * 1
web 使用了兩個 port 7788, 7789
但是不想讓 ha 把流量導去 7788，所以可以設定 EXCLUDE_PORTS
 如此一來，在 docker-compse up 後，就可以透過 http://192.168.99.100:5566/ 來連上了
並且可以透過 docker stats $(docker ps -q) 這個指令來觀察正在執行中的 containers 的基本 metrics~
快速簡單!</description>
    </item>
    
  </channel>
</rss>