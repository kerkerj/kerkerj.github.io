<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mongo | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/mongo/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-10-22T19:20:30+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[API-d11] - MongoDB - Hello World!]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/11/api-d11/"/>
    <updated>2014-10-11T20:09:08+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/11/api-d11</id>
    <content type="html"><![CDATA[<p>今天先講在 Server 中如何操作 MongoDB</p>

<p>一樣開啟虛擬機，</p>

<p>我們在先前已經有先安裝過 MongoDB 了，因此，在 Ubuntu Server 中預設是開機啟動的</p>

<p>登入虛擬機吧~</p>

<p>登入虛擬機後，我們要進入 MongoDB，必須使用 <code>mongo</code> 這個 MongoDB Shell</p>

<pre><code>$ mongo
MongoDB shell version: 2.6.4
connecting to: test
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
    http://docs.mongodb.org/
Questions? Try the support group
    http://groups.google.com/group/mongodb-user
&gt;  
</code></pre>

<p>此時會發現輸入指令的地方變成了 <code>&gt;</code> 表示我們已經在 mongodb 裡面了</p>

<p>為什麼不需要帳號密碼即可進入 MongoDB 呢，因為 MongoDB 預設是不需要做登入的</p>

<p>並且加上預設只能由本機存取，也就是說，外部連入的 IP 是進不了 MongoDB 的</p>

<p>這部分後面會再作說明。</p>

<p>傳統的 Table 在 MongoDB 中，稱之為 Collection</p>

<p>一筆 record 在 MongoDB 中，稱之為 document</p>

<p>進入 MongoDB 後，</p>

<p>就可以簡單操作一些指令：</p>

<p>查詢所有的 DB:</p>

<pre><code>&gt; show databases;
admin  (empty)
local  0.078GB
</code></pre>

<p>切換 DB</p>

<pre><code>&gt; use test;
</code></pre>

<p><code>use DBNAME</code> 若 DBNAME 不存在於 MongoDB 中的話，</p>

<p>等同於建立一個新的 DB，意思就是我們不需要下 &lsquo;建立 DB&rsquo; 這個指令，</p>

<p>直接 <code>use</code> 就是一個新的 DB 了，不過這個 DB 會直到有 Collection 被新增才算真正的被建立</p>

<p>意即如果我們 use 了一個新的 DB，但是並沒有做任何新增 Collection 的動作就離開，</p>

<p>這個 DB 也不會被建立起來</p>

<p>當我們使用 <code>use DBNAME</code> 進入 DB 後：</p>

<h3>新增 Collection</h3>

<pre><code>&gt; db.createCollection("TestCollection")
{ "ok" : 1 }
</code></pre>

<h3>CRUD 操作</h3>

<p>此時 Collection &ldquo;TestCollection&rdquo; 就被建立了，
可以使用:</p>

<h4>新增資料:</h4>

<p>example: <code>db.TestCollection.insert(DATA);</code></p>

<p>DATA 就是 javascript 的 array map</p>

<pre><code>&gt; db.TestCollection.insert({data: "test_data", num: 2, arr: ["arr1", "arr2", "arr3"]});
</code></pre>

<h4>查詢資料</h4>

<p>example: <code>db.TestCollection.find(WHERE_CONDITION);</code></p>

<pre><code>&gt; db.TestCollection.find({data: "test_data"});
{ "_id" : ObjectId("5430497db94bb4afe2f8b387"), "data" : "test_data", "num" : 2, "arr" : [ "arr1", "arr2", "arr3" ] }
</code></pre>

<p>p.s. 每插入一筆資料，MongoDB 預設都會給訂一組 ObjectId</p>

<h4>查詢所有資料</h4>

<pre><code>&gt; db.TestCollection.find();
{ "_id" : ObjectId("5430497db94bb4afe2f8b387"), "data" : "test_data", "num" : 2, "arr" : [ "arr1", "arr2", "arr3" ] }
</code></pre>

<h4>修改資料</h4>

<p>example: <code>db.TestCollection.update(WHERE_CONDITION, SET);</code></p>

<pre><code>&gt; db.TestCollection.update({data: "test_data"}, { $set: {num: 3} });
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

// 查看 num 是否從 2 變 3 了
&gt; db.TestCollection.find({data: "test_data"});
{ "_id" : ObjectId("5430497db94bb4afe2f8b387"), "data" : "test_data", "num" : 3, "arr" : [ "arr1", "arr2", "arr3" ] }
</code></pre>

<h4>刪除資料</h4>

<p>exmaple: <code>db.TestCollection.remove(WHERE_CONDITION);</code></p>

<pre><code>&gt; db.TestCollection.remove({data: "test_data"});
</code></pre>

<h3>刪除 Collection</h3>

<pre><code>&gt; db.TestCollection.drop();
</code></pre>

<h3>查詢有哪些 Collection</h3>

<pre><code>&gt; show collections;
</code></pre>

<h3>砍掉目前所在的整個 DB:</h3>

<pre><code>&gt; use test;
&gt; db.dropDatabase();
{ "dropped" : "test", "ok" : 1 }
</code></pre>

<p>tips: 在 mongo shell 裡有自動補完的功能，可以按下 tab 來查看有什麼方法可以用</p>

<p>ctrl-D 離開 Mongo Shell</p>

<p><a href="http://docs.mongodb.org/manual/">MongoDB 官網文件</a>非常詳細，可以多看看</p>

<p>明天會用 Node.js 的 MongoDB driver 來操作 MongoDB!</p>
]]></content>
  </entry>
  
</feed>
