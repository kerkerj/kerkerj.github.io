<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bridge | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/bridge/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-12-08T14:52:37+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Swift-d19] - Basic - 橋接第三方 Objc Library - Reachability and Bridge.h]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/19/swift-d19/"/>
    <updated>2014-10-19T21:19:28+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/19/swift-d19</id>
    <content type="html"><![CDATA[<p>本日專案的 <a href="https://github.com/kerkerj/ithome-BridgeObjcDemo">Github link</a></p>

<p>由於 Swift 剛推出不到一年</p>

<p>有許多的 third-party library 一定還沒轉換成 Swift</p>

<p>或者是作者沒心力轉會成 Swift</p>

<p>但是有些套件非常方便，那在 Swift 要怎麼使用 Objective-C 的套件呢?</p>

<p>Xcode 有提供橋接的方式，非常好用</p>

<p>接下來就介紹一下如何使用吧!</p>

<p>以下的例子是一個叫做 <code>Reachability</code> 的套件</p>

<p>它可以簡單地幫我們判斷是否有網路連線 3g or wifi 之類的</p>

<p>所以我們先下載這個套件吧!</p>

<p><a href="https://github.com/tonymillion/Reachability">https://github.com/tonymillion/Reachability</a></p>

<p>下載解壓縮後</p>

<p>將 .h 和 .m 檔拖曳進 Xcode 專案中</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-18%2014.27.17.png" alt="image" /></p>

<p>接下來 Xcode 就會問一個非常重要的問題!:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-18%2014.26.24.png" alt="image" /></p>

<p>是否要建立橋接的 .h 檔案!</p>

<p>當然是選擇建立囉~</p>

<p>此時的專案結構就會變成這樣:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-18%2014.26.38.png" alt="image" /></p>

<p>再來編輯 bridge-header.h 檔</p>

<p>將想要橋接的 objc 套件 import 進去</p>

<pre><code class="swift">#import "Reachability.h"
</code></pre>

<p>這樣我們就可以在 Swift 中直接使用該套件的類別與方法了!</p>

<p>接下來就讓我們試試看!</p>

<p>在 ViewController 中加入以下程式碼:</p>

<pre><code>//
//  ViewController.swift
//  BridgeObjcDemo
//
//  Created by Jerry Huang on 2014/10/18.
//  Copyright (c) 2014年 kerkerj. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.


        var isConnected = checkNetworkConnection()

        let alert = UIAlertView()
        alert.title = "Network Connection"

        if isConnected {
            alert.message = "You're online!"
        } else {
            alert.message = "You're offline!"
        }

        alert.addButtonWithTitle("OK")
        alert.show()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    func checkNetworkConnection() -&gt; Bool {
        let reachability: Reachability = Reachability.reachabilityForInternetConnection()
        let networkStatus: NetworkStatus = reachability.currentReachabilityStatus()

        println(networkStatus.toRaw())

        switch (networkStatus.toRaw()) {
        case 0:
            println("[Network Status]: NotReachable")
        case 1:
            println("[Network Status]: ReachableViaWWAN")
        case 2:
            println("[Network Status]: ReachableViaWiFi")
        default:
            break
        }

        return networkStatus.toRaw() != 0
    }
}
</code></pre>

<p>簡單的說，我們寫了一個方法，使用 Reachability 偵測網路連線</p>

<p>在 ViewDidLoad 時，偵測是否有網路連線</p>

<p>跳一個 Alert 會告訴你是有連線還是沒有連線</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-18%2014.42.45.png" alt="image" /></p>

<p>不過在這邊，我不曉得如何讓模擬器關掉連線，</p>

<p>所以沒辦法提供 offline 的圖</p>

<p>但是我實際安裝到手機後，將 wifi 功能關掉後的確是有跳出 offline 的</p>

<p>哈哈 雖然說沒圖沒真相但是&hellip;XD</p>

<p>橋接第三方套件就是那麼簡單! :D</p>
]]></content>
  </entry>
  
</feed>
