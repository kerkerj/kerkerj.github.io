<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-08-07T01:28:14+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Android] Thread 處理 UI Update (2)]]></title>
    <link href="http://kerkerj.github.io/blog/2012/06/12/android-ui-update-2/"/>
    <updated>2012-06-12T17:32:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2012/06/12/android-ui-update-2</id>
    <content type="html"><![CDATA[<p>這是第一篇: [[Android] thread 處理 UI update]</p>

<p>在那之後自己在寫一些東西時也用到 runOnUiThread<br/>
不過有別的方法可以不用像 runOnUiThread 寫的比較雜亂<br/>
那就是用 AsyncTask , 剛剛自己也順手寫了一個 Test 放在 Github 上<br/>
我覺得使用 AsyncTask 可以不用處理 thread, 而且寫法上比較清楚~</p>

<script src="https://gist.github.com/kerkerj/7367244.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Android] 安裝開發環境]]></title>
    <link href="http://kerkerj.github.io/blog/2012/04/18/android-install-developing-env/"/>
    <updated>2012-04-18T13:54:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2012/04/18/android-install-developing-env</id>
    <content type="html"><![CDATA[<p>最近電腦重裝的關係，順便把 Android 開發環境整理一下，
不得不說 Android 在 Eclipse 上的外掛開發的越來越不錯了！
Step1. 到 <a href="http://oracle%20java%20se%20downloads/">Oracle Java SE downloads</a> 點擊 Java Platform (JDK) 並選擇作業系統
Step2. 安裝 <a href="http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/indigosr2">Eclipse IDE for Java EE Developers</a>
Step3. 到 <a href="http://developer.android.com/">Android Developers</a> 下載 <a href="http://developer.android.com/sdk/index.html">Android SDK</a> 並安裝<br/>
<a href="http://4.bp.blogspot.com/-B4zRQJ_Hino/T47FNembF_I/AAAAAAAAC5w/onWCdvf2iC8/s1600/android1.png"><img src="http://4.bp.blogspot.com/-B4zRQJ_Hino/T47FNembF_I/AAAAAAAAC5w/onWCdvf2iC8/s640/android1.png" alt="" /></a>
Step4. 安裝 ADT Plugin for Eclipse ( <a href="http://developer.android.com/sdk/eclipse-adt.html#installing">官方文件</a> )
   a. 開啟 Eclipse， [Help] &ndash;> [Install New Software&hellip;.]
   b. 點選 [Add] 輸入名稱及網址 ( APT / <a href="https://dl-ssl.google.com/android/eclipse/">https://dl-ssl.google.com/android/eclipse/</a> )
   c. 等待 pending 結束後會看到可以勾選的 Developer Tools ，選擇 next 並 accept 開始安裝
<a href="http://3.bp.blogspot.com/-QHyb2NYl9Bc/T47FOa_Pj0I/AAAAAAAAC50/Yrskz6l_VrU/s1600/android2.png"><img src="http://3.bp.blogspot.com/-QHyb2NYl9Bc/T47FOa_Pj0I/AAAAAAAAC50/Yrskz6l_VrU/s640/android2.png" alt="" /></a>
Step5. 安裝 packages (Platforms and Other Packages)
   a. 從 Eclipse : [Window] &ndash;> [Android SDK Manager]
   b. 從 Windows : 到 Android SDK 資料夾中點擊 SDK Manager.exe
   c. 從 Linux/Mac : 到 Android SDK 的 tools 資料夾，並執行 android 指令
   選擇要開發的版本或package並安裝
<a href="http://2.bp.blogspot.com/-K8t_6L2xiBs/T47FOxvM8BI/AAAAAAAAC6A/a7WIq7z-ygw/s1600/android3.png"><img src="http://2.bp.blogspot.com/-K8t_6L2xiBs/T47FOxvM8BI/AAAAAAAAC6A/a7WIq7z-ygw/s640/android3.png" alt="" /></a></p>

<pre><code>沒記錯的話安裝完 Eclpise 的外掛後，Eclipse 會自動跳出問你的 Android SDK 裝在哪，
</code></pre>

<p>  若這時候已經安裝好 SDK 的話就可以選擇第二個選項，並指定資料夾位址<br/>
<a href="http://2.bp.blogspot.com/-6bJrhcn2SiM/T47GecGxajI/AAAAAAAAC6Q/eneUabD0cmE/s1600/android4.png"><img src="http://2.bp.blogspot.com/-6bJrhcn2SiM/T47GecGxajI/AAAAAAAAC6Q/eneUabD0cmE/s640/android4.png" alt="" /></a>
接著就可以寫程式了
開啟模擬器的話就到下圖所示新增即可
<a href="http://2.bp.blogspot.com/-aB1Eh5AFUqs/T47HFnNpO9I/AAAAAAAAC6Y/4QhPHIZZcTk/s1600/android5.png"><img src="http://2.bp.blogspot.com/-aB1Eh5AFUqs/T47HFnNpO9I/AAAAAAAAC6Y/4QhPHIZZcTk/s640/android5.png" alt="" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Android] 遠端主機已強制關閉一個現存的連線]]></title>
    <link href="http://kerkerj.github.io/blog/2012/04/11/android-remote-shutdown/"/>
    <updated>2012-04-11T07:30:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2012/04/11/android-remote-shutdown</id>
    <content type="html"><![CDATA[<p>不知道大家在寫Android程式時使用實體機接PC時會不會很常出現這個錯誤
我個人還蠻常出現的，在測試時是非常緩慢的
Google了一下，找到了強者自己寫的adb.exe
檔案在討論串裡：<a href="http://code.google.com/p/android/issues/detail?id=12141">http://code.google.com/p/android/issues/detail?id=12141</a></p>

<pre><code>Nov 28, 2011  
New patched version of adb (1.0.29)   
Patch (diff) the same as early  
adb.exe   
478 KB Download  
</code></pre>

<p>Download: <a href="http://android.googlecode.com/issues/attachment?aid=121410050000&amp;name=adb.exe&amp;token=O8Q8Mzj8XLo6-cOEE6a2H8SG4Bg%3A1334136508184">adb.exe</a></p>

<p>下載後，到Android的SDK資料夾，進platform-tool資料夾，
將原本的adb.exe做備份，再將新的複製到原本的exe檔所在的地方，
重新啟動adb就可以了 (進DDMS重新啟動，或者重新啟動Eclipse也行)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Android] 開機啟動與解鎖啟動]]></title>
    <link href="http://kerkerj.github.io/blog/2012/04/11/android/"/>
    <updated>2012-04-11T07:29:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2012/04/11/android</id>
    <content type="html"><![CDATA[<p>BroadcastReceiver 開機啟動與解鎖啟動</p>

<p>主要是這兩個intent:</p>

<blockquote><p>Intent.ACTION_BOOT_COMPLETED //開機
Intent.ACTION_USER_PRESENT //解鎖</p></blockquote>

<p>只要建立下面的 Receiver
```java
public class MyReceiver extends BroadcastReceiver {</p>

<pre><code>@Override
public void onReceive(final Context context, final Intent intent) {
    final String action = intent.getAction();
    if (Intent.ACTION_BOOT_COMPLETED.equals(action)) {
  // TODO 開機啟動
    } else if (Intent.ACTION_USER_PRESENT.equals(action)) {
        // TODO 解鎖啟動
    }
}   
</code></pre>

<p>}
```
並且在 AndroidManifest.xml 裡宣告就可以了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Android] AlertDialog With Edittext]]></title>
    <link href="http://kerkerj.github.io/blog/2011/08/30/android-alertdialog-with-edittext/"/>
    <updated>2011-08-30T09:27:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2011/08/30/android-alertdialog-with-edittext</id>
    <content type="html"><![CDATA[<p>```java
  AlertDialog.Builder alert = new AlertDialog.Builder(this);</p>

<pre><code>alert.setTitle("Title");  
alert.setMessage("Message");  
// Set an EditText view to get user input   
final EditText input = new EditText(this);  
alert.setView(input);  

alert.setPositiveButton("Ok", new DialogInterface.OnClickListener() {  
 public void onClick(DialogInterface dialog, int whichButton) {  
 String value = input.getText();  
 Do something with value!  
 }  
});  

alert.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {  
 public void onClick(DialogInterface dialog, int whichButton) {  
 // Canceled.  
 }  
});  

alert.show();  
</code></pre>

<p>``` <br/>
就這樣XD</p>

<p>ref: <a href="http://www.androidsnippets.com/prompt-user-input-with-an-alertdialog">http://www.androidsnippets.com/prompt-user-input-with-an-alertdialog</a></p>
]]></content>
  </entry>
  
</feed>
