<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Forever | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/forever/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-12-08T14:52:37+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[API-d28] - 實戰開發 - 發佈 - Forever]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/28/api-d28/"/>
    <updated>2014-10-28T17:26:47+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/28/api-d28</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/kerkerj/ithome-RestfulAPIDemo/tree/Day28">Github 參考</a></p>

<p>接下來兩天要講 deploy 的部分</p>

<p>由於 deploy 的 script 其實非常的麻煩，因此我們就不提 deploy 的 script 了</p>

<p>我們只專注在 server 上需要什麼東西</p>

<p>今天要來看看 <code>forever</code> 這個套件</p>

<p>這個套件可以幫助 nodejs 的 server 遇上無預警的 server 掛掉時</p>

<p>會幫你自動重新啟動 nodejs 的 server</p>

<p>也就是說</p>

<p>假設說 nodejs 寫的 server 某個 route 有問題，</p>

<p>送 request 後會因為某些因素造成 server error 造成程式碼 crash 時</p>

<p>forever 的 monitor 會偵測到，並幫你自動重啟 server</p>

<p>至少不會造成其他正常存取 server 的使用者遭遇到 server down 的問題</p>

<p>這個套件可以選擇裝在 global 或是 project</p>

<p>在這邊我是選擇裝成 global</p>

<p>進到虛擬機</p>

<pre><code class="javascript">$ npm install -g forever
</code></pre>

<p>p.s. 如果遇到問題，試著跑下面的指令看看?</p>

<pre><code>$ sudo chown vagrant:vagrant -R ~/.npm/
</code></pre>

<p>接下來我們就可以使用 <code>forever</code> 這個指令了!</p>

<p>原本我們要啟動 server 的話</p>

<p>是要下:</p>

<pre><code>$ npm start 
</code></pre>

<p>同義於:</p>

<pre><code>$ node ./bin/server.js
</code></pre>

<p>如果要改用 <code>forever</code> 的話:</p>

<pre><code>// 記得先到專案根目錄
$ forever start bin/server.js
warn:    --minUptime not set. Defaulting to: 1000ms
warn:    --spinSleepTime not set. Your script will exit if it does not stay up for at least 1000ms
info:    Forever processing file: ./bin/server.js
</code></pre>

<p>然後就會被丟到背景執行了</p>

<p>那要怎麼知道我的 server 有跑起來呢?</p>

<pre><code>$ forever list
info:    Forever processes running
data:        uid  command                              script        forever pid   logfile                         uptime
data:    [0] 6qhd /home/vagrant/.nvm/v0.10.32/bin/node bin/server.js 13746   13748 /home/vagrant/.forever/6qhd.log 0:0:0:47.743
</code></pre>

<p>就會列出相關資訊以及 forever 自己的 log file 位置</p>

<p>要關閉的話:</p>

<pre><code>$ forever stop bin/server.js
info:    Forever stopped process:
data:        uid  command                              script        forever pid   logfile                         uptime
[0] 6qhd /home/vagrant/.nvm/v0.10.32/bin/node bin/server.js 13746   14061 /home/vagrant/.forever/6qhd.log 0:0:0:6.595
</code></pre>

<p><code>bin/server.js</code> 也可以替換成 forever uid 或 pid</p>

<p>如果要重開的話</p>

<pre><code>$ forever restart bin/server.js
</code></pre>

<p>超簡單!</p>

<p>這樣就可以不用擔心 server 突然掛掉了&hellip;.嗎?</p>

<p>錯，還是必須要監控 server 狀態</p>

<p>畢竟，<code>forever</code> 也是會有 bug 的</p>

<p>所以自己的 server 自己顧</p>

<p>真正應用在 production 環境還是必須要監控的</p>

<p>今天就分享到這啦!</p>
]]></content>
  </entry>
  
</feed>
