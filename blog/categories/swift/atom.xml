<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Swift | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/swift/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-10-02T20:39:53+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Swift-d2] - 安裝及 Hello World!]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/02/swift-d2/"/>
    <updated>2014-10-02T20:19:45+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/02/swift-d2</id>
    <content type="html"><![CDATA[<p>首先，你必須要有一台 Mac。<br/>
我也不知道要如何用虛擬機 build 一台 Mac VM 出來，<br/>
所以就是，先買一台 Mac XD</p>

<p>若已經有了 Mac，只要到 Appstore 下載 Xcode 即可，<br/>
注意是要 Xcode 6.0 以上， Xcode 6 才有支援 Swift ，舊版的 Xcode 5 是無法開發 Swift 的</p>

<p>安裝完 Xcode 後</p>

<p>首先開啓 Xcode<br/>
選擇 &ldquo;Create a playground"<br/>
<img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-02%2011.24.32.png" alt="p1" /></p>

<p>輸入 Playground 名稱並選擇儲存位置<br/>
<img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-02%2011.25.13.png" alt="p2" /></p>

<p>就進入了 Playground 了！</p>

<p>可以看到 Xcode 已經預先載入了幾行程式碼了
來稍微看一下:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-02%2011.25.26.png" alt="p4" /></p>

<p>```
// Playground &ndash; noun: a place where people can play</p>

<p>import UIKit</p>

<p>var str = &ldquo;Hello, playground&rdquo;
```</p>

<p>第一行，使用了 <code>//</code>，有寫過程式的話一定都知道這是註解 <br/>
在 Swift 裡面使用 <code>//</code> 及 <code>/* .... */</code> 來註解程式碼</p>

<p>第二行意思則是將 UIKit 引入到 playground 中，<br/>
借此使用 UIKit 的函示物件等等，目前還都不會用到</p>

<p>第三行的意思則是宣告了一個變數，該變數為一個字串，內容為 &ldquo;Hello World!&rdquo;</p>

<p>在 Playground 中，很有意思的是右邊的灰色區塊，<br/>
Xcode 會即時顯示該變數的值、型別、以及輸出結果，<br/>
對於剛入門 Swift 的開發者來說是一個非常好的功能來練習語法，
也因此未來幾天都會使用 Playground 來練習 Swift 基本語法!</p>

<p>最後當然要不免俗的撰寫最經典的程式 &ndash; Hello World!</p>

<p>加入:
<code>
println(str)
</code></p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-02%2011.27.21.png" alt="p5" /></p>

<p>馬上就可以在右邊看到結果囉!</p>

<p><code>println(args)</code> 是 Swift 標準輸出的函示，算是使用率蠻高的一個 method，只要將參數代入即可顯示該參數的內容，<br/>
有興趣也可以透過 Xcode 的 autocomplete 來看看和 <code>print</code> 有關的 method，<br/>
例如 <code>print()</code>，可以試試看，有些許不一樣哦!</p>

<p>未來一個禮拜都會來練習一些基本語法!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Swift-d1] - 介紹]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/02/swift-d1/"/>
    <updated>2014-10-02T01:37:44+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/02/swift-d1</id>
    <content type="html"><![CDATA[<p>Swift 是 2014 年由蘋果公司在其開發者大會 WWDC 上所發佈的程式語言</p>

<p>The Swift Programming Language 一書中提到：</p>

<ol>
<li>Swift 用來撰寫 iOS 及 Mac OSX 的程式。</li>
<li>Swift 吸收了 C 和 Objective-C 的優點，使其在設計更具彈性、容易，且撰寫時有更多樂趣。</li>
<li>Swift 是基於成熟而且倍受喜愛的 Cocoa 和 Cocoa Touch framework，意即 Swift 可以直接使用這些現有的框架</li>
<li>Swift 兼具編譯語言的性能，以及直譯式語言的特性。</li>
</ol>


<p>** 什麼是 Cocoa/Cocoa Touch framework: <br/>
Cocoa framework 是 Apple 爲 Mac OSX 所建立的環境，用來開發 OSX 的程式，<br/>
而 Cocoa Touch framework 則是建立於 Cocoa framework 之上，用來開發 iOS 作業系統程式，<br/>
此兩種 framework 皆遵循 MVC 軟體架構，開發時必須遵循此架構。</p>

<p>若之前從未接觸過 Objective-C 但又想嘗試開發 iOS app 的話，<br/>
現在是個入門的好時機，Swift 去除了 Objective-C 的繁瑣語法，<br/>
且相較於 Objective-C 是個更好入門的程式語言。</p>

<p>對於非 Objective-C 開發者而言，若先前有過程式語言開發經驗的話，語法上手不會太難，<br/>
只是需要花時間學習 Cocoa/Cocoa Touch framework，但是，都要學習撰寫 iOS app 了，<br/>
不學 Cocoa/Cocoa Touch framework 應該也說不過去 :D</p>

<p>而對於 Objective-C 開發者而言，由於已經非常熟悉 Cocoa/Cocoa Touch framework 了，<br/>
在 Swift 使用 Cocoa/Cocoa Touch framework 是幾乎無痛轉換的，因為函式、變數名稱完全一樣，<br/>
只需要熟悉 Swift 語法，不出一天即可快速上手，也因此 Objectiv-C 開發者也不需過於擔心飯碗被搶走 XD<br/>
接觸過 Cocoa/Cocoa Touch framework 的開發者來說還是有相當大的優勢的。</p>

<p>由於筆者之前從未接觸過 Objective-C/ Cocoa/ Cocoa Touch framework，<br/>
只有些許 java/php/ruby 撰寫經驗，<br/>
選擇 Swift 的原因之一即是語法上手容易，並且有 playground 可以馬上執行撰寫的程式，<br/>
也因此希望能夠透過學習 Swift ，了解 iOS app 開發架構，實際打造出一款 app！</p>
]]></content>
  </entry>
  
</feed>
