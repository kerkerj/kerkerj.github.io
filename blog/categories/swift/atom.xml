<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Swift | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/swift/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-10-14T22:44:56+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Swift-d14] - Basic - Navigation View 2 + ViewController]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/14/swift-d14/"/>
    <updated>2014-10-14T22:40:36+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/14/swift-d14</id>
    <content type="html"><![CDATA[<p>延續昨天的主題，今天我們要做的事情是：</p>

<ol>
<li>爲新的 ViewController 實際加入程式碼 (ViewController2.swift)</li>
<li>加入一個 button 來控制是否前進下一頁或後退</li>
</ol>


<p>我們先新增一個檔案:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.04.30.png" alt="image" /></p>

<p>接著選擇 CocoaTouch Class:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.05.56.png" alt="image" /></p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.06.45.png" alt="image" /></p>

<p>回到 storyboard, 選擇第二個 ViewController</p>

<p>並按照下圖，將 Class 指定給 View2Controller</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.07.15.png" alt="image" /></p>

<p>這樣子 storyboard 的 View2 就會指定到 View2Controller 了</p>

<p>我們在 View2Controller 的 viewDidLoad 方法中加入一行程式碼</p>

<p>來驗證他是否有吃到 View2Controller</p>

<pre><code class="swift">self.title = "View2 by me"
</code></pre>

<p>Run 起來看的話就會是這樣:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.10.52.png" alt="image" /></p>

<p>的確是有吃到程式碼的</p>

<p>再來就是要加入按鈕了:</p>

<p>我們先拉一個 Button 進 View2Controller</p>

<p>並且將該 Button 拉進 View2Controller 的 code</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.11.41.png" alt="image" /></p>

<p>設定該 button 爲 Action, 並且名稱是 &lsquo;backToView&rsquo;</p>

<p>意即我們要讓點下 View2Controller 的 Button 行為為回到上一個 View</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.12.50.png" alt="image" /></p>

<p>另外對 View2 為他加入一個 storyboard ID, View2，等等會用到:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.20.21.png" alt="image" /></p>

<p>View1 同樣也加入一個 Button, 並且也是拉到 View1 的 code 中，</p>

<p>同樣是設定 Action ，action name 定義為 &lsquo;goView2&rsquo;</p>

<p>就是按下 button 後會到 View2</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.13.59.png" alt="image" /></p>

<p>接著我們分別在 ViewController 及 View2Controller 的程式碼中加入以下程式碼:</p>

<p>View1 -</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.15.48.png" alt="image" /></p>

<pre><code class="swift">@IBAction func goView2(sender: AnyObject){
self.navigationController?.pushViewController(self.storyboard?.instantiateViewControllerWithIdentifier("View2") as View2Controller, animated: true)
}
</code></pre>

<p>View2 -</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%202.15.56.png" alt="image" /></p>

<pre><code class="swift">@IBAction func backToView(sender: AnyObject) {
    self.navigationController?.popViewControllerAnimated(true)
}
</code></pre>

<p>在這邊 Navigation 用到的是 Push, Pop 的概念，使用 View stack</p>

<p>進到下一個 View 時，就 push 欲前往的 View</p>

<p>回到上一個 View 時，就 pop 出上一個 View</p>

<p>在 goView2 中，我們使用到了 storyboard 的 identifier</p>

<p>先讓 storyboard 抓有沒有 identifier 名為 &ldquo;View2&rdquo; 的物件</p>

<p>有的話就抓起來，並且使用 as 轉型成 View2Controller, push 進 stack</p>

<p>做完上述事情後，執行程式碼就可以看到結果囉!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Swift-d13] - Basic - Navigation View 1 + ViewController]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/13/swift-d13/"/>
    <updated>2014-10-13T18:24:21+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/13/swift-d13</id>
    <content type="html"><![CDATA[<p>今天來試著拉拉看 Navigation View</p>

<p>什麼是 Navigation View?</p>

<p>就是類似下圖的東西:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.07.37.png" alt="image" /></p>

<p>用來控制 View 之間的流程</p>

<p>今天我們繼續使用 storyboard 來簡單拉拉 Navigation View</p>

<p>首先先開一個新 project 吧!</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.09.15.png" alt="image" /></p>

<p>接著我們到 storyboard，選擇 ViewController</p>

<p>再來我們要嵌入 Navigation View</p>

<p>所以要選擇: Edit -> Embed in -> Navigation View</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.10.09.png" alt="image" /></p>

<p>選擇後，就會發現 storyboard 的 layout 改變了</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.11.36.png" alt="image" /></p>

<p>Navigation View 實際上是透過 NavigationController 來控制</p>

<p>原本程式的進入點是 ViewController</p>

<p>由於我們要使用 Navigation View</p>

<p>因此透過 Xcode 將 NavigationController 嵌進去</p>

<p>讓程式進入點變成 NavigationController</p>

<p>再透過 NavigationController 將程式導到 ViewController</p>

<p>接下來我們命名一下 ViewController:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.14.28.png" alt="image" /></p>

<p>然後我們從右下角的 Object library 選擇 Bar Button items 加入</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.14.56.png" alt="image" /></p>

<p>並將該物件拉到 NavigationBar 的右方</p>

<p>接下來我們希望點下 item 按鈕，可以到另外一個 ViewController</p>

<p>因此一樣從右下角的 Object library 拉一個 ViewController 到 storyboard 的空白處</p>

<p>直接拉一個過去就好</p>

<p>所以會長這樣:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.17.30.png" alt="image" /></p>

<p>接著就從 ViewController 的 item 上，按著 ctrl + 拖曳，</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.18.29.png" alt="image" /></p>

<p>往右邊剛剛新增的 ViewController 拉，放開後就會選擇要做的動作，我們選擇 &lsquo;show&rsquo;</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.19.44.png" alt="image" /></p>

<p>為了辨識起見，我們點選第二個 ViewController ，加入 Title:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-13%201.22.11.png" alt="image" /></p>

<p>都設定好後，按下執行，應該就可以看到 Navigation View 正常運作了!</p>

<p>按下 item 會到 View2, View2 會自動產生 back 鍵，回到 View1</p>

<p>是不是很方便呢!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Swift-d12] - Basic - 基本元件 (Label, Button, UIColor, 文字輸入框)]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/12/swift-d12/"/>
    <updated>2014-10-12T18:50:20+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/12/swift-d12</id>
    <content type="html"><![CDATA[<p>今天來放一些基本的元件:</p>

<p>放入一個文字輸入框、文字標簽、按鈕，</p>

<p>在文字框輸入一些字後，按下按鈕後，會在文字標簽顯示剛剛輸入的內容：</p>

<p>首先使用右下角的 Object library 中將上述三種元件拉到 storyborad 中</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-12%2018.37.11.png" alt="image" /></p>

<p>圖中依順序是文字標簽、文字輸入框、按鈕</p>

<p>接著我們要使用到的文件是文字標簽以及文字輸入框，另外要將按鈕加入事件</p>

<p>因此程式的流程是:</p>

<p>按下按鈕後-> 執行按鈕事件
    -> 抓到文字輸入框的輸入內容
    -> 將文字標簽的內容改變成文字輸入框的內容</p>

<p>因此先使用昨天的方式，將文字標簽及文字輸入框拉到 ViewController 中以便使用它們，在圖中的程式碼 12, 13 行：</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-12%2018.40.48.png" alt="image" /></p>

<p>這樣我們就可以控制文字標簽的文字以及拿到輸入框的文字了</p>

<p>再來就是最重要的按鈕事件了!</p>

<p>一樣使用 ctrl + 拖曳的方式將按鈕拉到程式碼中，但是這次是要選擇 「IBAction」，是事件的意思:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-12%2018.42.57.png" alt="image" /></p>

<p>接著就會產生出一段 function:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-12%2018.43.05.png" alt="image" /></p>

<p>名為 titleButton, 我們在方法中輸入一行程式碼:</p>

<pre><code class="swift">titleLabel.text = titleField.text
</code></pre>

<p>意思就是將文字標簽的字改成文字輸入框的文字</p>

<p>接著我們就把程式跑起來吧!</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-12%2018.46.14.png" alt="image" /></p>

<p>在文字框中輸入文字，按下按鈕，標簽就可以變文字了!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Swift-d11] - Basic - Hello World! ViewController]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/11/swift-d11/"/>
    <updated>2014-10-11T20:09:13+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/11/swift-d11</id>
    <content type="html"><![CDATA[<p>今天就要來建立一個 Hello World swift app 啦 XD</p>

<p>首先就是開 Xcode 然後開專案囉~~</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.18.22.png" alt="image" /></p>

<p>就看你要存去哪裡啦～</p>

<p>再來就會進到專案本身:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.19.47.png" alt="image" /></p>

<p>我們就看右下角有個地方可以找到 Label 這個選項:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.20.27.png" alt="image" /></p>

<p>把他拉到 Storyboard 的任意位置就可以了~</p>

<p>然後更改 label 的屬性:</p>

<p>先點一下 label 選取後，看右上角</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.21.53.png" alt="image" /></p>

<p>有個地方可以更改它的顯示文字，我們將它改成 HelloWorld!</p>

<p>改完之後，按左上角的 Run! ，我們也可以選擇後面的 target 看是要跑在 i6 或是 i5 上，</p>

<p>按下 Run 後程式就會 deploy 到模擬器上面了！</p>

<p>這就是第一個 Hello World 啦!</p>

<p>完全不用寫程式哦 XDDDDD</p>

<p>不過還是要稍微了解一下運作原理啦~</p>

<p>如果剛剛在編輯 storyboard 的時候，有發現那個 View 的左邊有一個奇怪的箭頭指向 View，那個箭頭的意思其實就是程式進入點的意思，</p>

<p>storyboard 就是在描述程式的走向，像在說故事一樣，從某一頁按了什麼東西跳到哪一頁</p>

<p>其實我一直都沒有很習慣 storyboard 的拉法，還是比較習慣用程式建立物件，將想要的物件用程式擺(憑空想像XD)，但是前面幾個比較屬於練習的小東西都還是會用拉的，比較好懂~</p>

<p>我們剛剛建立的那一頁 Hello world</p>

<p>基本上就是在左邊的 ViewController</p>

<p>那我們試著使用程式來改變 HelloWorld 這個 label 的值吧!</p>

<p>我們首先使用分割視窗的模式</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.33.31.png" alt="image" /></p>

<p>選擇左邊數來第二個按鈕</p>

<p>然後選擇 storyboard 及 ViewController</p>

<p>讓他是照下面那樣排列的</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.34.52.png" alt="image" /></p>

<p>接著在 左邊的 label 上按著 ctrl ，拖曳到右邊的程式碼 class 中，</p>

<p>他就會自動幫你產生一個 storyboard 物件與程式碼的連結，</p>

<p>輸入 label 的變數，我們取名叫 titleLabel</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.37.41.png" alt="image" /></p>

<p>就可以在 viewDidload 中，更改該 label 的值:</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.38.13.png" alt="image" /></p>

<pre><code>override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        titleLabel.text = "hi"
    }
</code></pre>

<p>在 viewDidload 中，雖然 label 在 storyboard 時已經有初始值 &ldquo;Hello World&rdquo; 了</p>

<p>但是當 app 被 init 起來後，ViewController 也被初始化了，因此就會執行 ViewDidload 的方法，這個時候就會執行到剛剛的 <code>titleLabel.text = "hi"</code></p>

<p>於是就會更改掉 label 的值了</p>

<p><img src="https://dl.dropboxusercontent.com/u/12400343/images/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-10-10%202.41.04.png" alt="image" /></p>

<p>以上就是簡單的 Hello World</p>

<p>明天來拉幾個常用的元件！</p>

<p>p.s. 截圖感謝同事菲力克濕協助幫忙 :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Swift-d10] 延伸閱讀]]></title>
    <link href="http://kerkerj.github.io/blog/2014/10/10/swift-d10/"/>
    <updated>2014-10-10T01:50:01+08:00</updated>
    <id>http://kerkerj.github.io/blog/2014/10/10/swift-d10</id>
    <content type="html"><![CDATA[<p>今天算一算也來到第十天了，</p>

<p>前面講了 8 天的語法，其實會有些枯燥</p>

<p>不過有些語法又很有趣</p>

<p>我不懂 Objective-C，</p>

<p>如果想從 Objectiv-C 轉換到 Swift 的話，最好查查一些比較的文章</p>

<p>最好的文件就是<a href="https://developer.apple.com/library/ios/navigation/#">官方文件</a>了</p>

<p>以 UILabel 為例</p>

<p>官方網站會列出兩種不同<a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UILabel_Class/index.html#//apple_ref/occ/instp/UILabel/text">寫法</a>:</p>

<pre><code class="swift">// SWIFT
var text: String?

// OBJECTIVE-C
@property(nonatomic, copy) NSString *text
</code></pre>

<p>如果要從 Swift 基本概念開始，當然是首推官方的 <a href="https://itunes.apple.com/us/book/the-swift-programming-language/id881256329?mt=11&amp;ls=1">The Swift Programming Language</a></p>

<p>是英文苦手的話，強國人有 <a href="https://www.gitbook.io/book/numbbbbb/-the-swift-programming-language-">翻譯文件</a></p>

<p>這群人非常厲害，發表後沒幾天就翻譯完成了</p>

<p>不過因為技術用語還是以中國為主，因此建議英文優先，或是對照著看</p>

<p>前面幾天都基本介紹前半部而已，屬於一般學習程式語言的基本練習而已</p>

<p>後半部是更詳細的部分，有空的話還是可以多看看~</p>

<p>另外，官方還出了一本 <a href="https://itunes.apple.com/us/book/using-swift-cocoa-objective/id888894773?mt=11">Using Swift with Cocoa ad Objective-C</a></p>

<p>就是在介紹如何使用 Swift 加上 Cocoa framework 開發 App</p>

<p>不過書的內容不多，算入門級，有興趣也可看看這本~</p>

<p>接下來會開始用 Swift 寫簡單的界面</p>

<p>由於筆者從沒寫過 iOS app，因此也是會用大約十天的時間來簡單練習一些常用的 Cocoa Touch framework 的元件</p>

<p>順帶一提前面沒講到的，Objective-C 有個東西叫作 Catagory，在 Swift 裏是 extension</p>

<p>不需要破壞原本的結構，加上一些外掛，讓原本的結構更好用</p>

<p>(好像是個很重要的順帶一提 XD)</p>
]]></content>
  </entry>
  
</feed>
