<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Freebsd | kerkerj]]></title>
  <link href="http://kerkerj.github.io/blog/categories/freebsd/atom.xml" rel="self"/>
  <link href="http://kerkerj.github.io/"/>
  <updated>2014-10-13T23:26:33+08:00</updated>
  <id>http://kerkerj.github.io/</id>
  <author>
    <name><![CDATA[kerkerj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[FreeBSD] FNMP (Nginx)]]></title>
    <link href="http://kerkerj.github.io/blog/2010/12/16/freebsdnginxphpmysql/"/>
    <updated>2010-12-16T06:43:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2010/12/16/freebsdnginxphpmysql</id>
    <content type="html"><![CDATA[<p>就是網頁伺服器 Nginx
FreeBSD + Nginx + php + MySQL</p>

<p>我個人是直接把 apache 直接換成 Nginx
其他只是多安裝一些模組而已，因此換起來還好, 不過還是稍微會寫一些安裝上的順序。</p>

<h1>安装MySQL </h1>

<p>參閱 <a href="http://kerkerj.logdown.com/posts/2010/10/05/freebsd81-famp">此篇文章</a></p>

<h1>安裝PHP</h1>

<pre><code>#cd /usr/ports/lang/php5
#make config install clean
</code></pre>

<p>將下面的模組勾一勾，沒有的選項就不管他了～
<code>
[X] CLI        Build CLI version
[X] CGI        Build CGI version
[X] FPM        必勾!!! Nginx處理php時是要交給他處理
[X] APACHE     Build Apache module
[ ] DEBUG      Enable debug
[X] SUHOSIN      Enable Suhosin protection system
[X] MULTIBYTE    Enable zend multibyte support
[ ] IPV6       Enable ipv6 support
[ ] REDIRECT   Enable force-cgi-redirect support (CGI only)
[ ] DISCARD    Enable discard-path support (CGI only)
[X] FASTCGI    Enable fastcgi support (CGI only)
[X] PATHINFO   Enable path-info-check support (CGI only)
</code></p>

<h1>安裝php5-entensions</h1>

<pre><code>#cd /usr/ports/lang/php5-extensions/
# make config install clean
</code></pre>

<p>勾選需要的extension，下面必裝，其餘隨意。
<code>
[X] FTP        FTP support
[X] GD      
[X] GETTEXT
[X] MBSTRING
[X] MYSQL
[ ] POSIX //去掉.
[ ] SQLITE //去掉.
[X] ZLIB
</code></p>

<pre><code>#cd /usr/local/etc
# cp php.ini-development php.ini
</code></pre>

<p>=>修改PHP設定檔</p>

<h1>安裝nginx</h1>

<pre><code>#cd /usr/ports/www/nginx/
#make install clean
</code></pre>

<p>安裝nginx就是這麼簡單～</p>

<p>設定nginx的部份：
編輯 <code>/usr/local/etc/nginx/nginx.conf</code>
將<code>#user nobody;</code> 改成 <code>user www;</code>
找到下面的部份：
<code>
location / {
    root    /usr/local/www/nginx;  //網頁目錄可以換，看你網頁放哪 (ex./home/www)
    index    index.html index.htm;  //記得加入 index.php 等等
}
</code></p>

<p>下面是給 FPM 處理 PHP 的部份，記得先將前面的 # 註解刪掉，
然後將 <code>fastcgi_param</code> 的 <code>/scripts$fastcgi_script.name</code>
更改為: <code>/你的網頁目錄$fastcgi_script.name</code>
例如： <code>/home/www$fastcgi_script.name</code></p>

<pre><code>#location ~ \.php$ {
#    fastcgi_pass    127.0.0.1:9000;
#    fastcgi_index   index.php;
#    fastcgi_param     SCRIPT_FILENAME    /scripts$fastcgi_script.name;
#    include      fastcgi_params;
#}
</code></pre>

<p>安裝完後, 記得編輯 <code>/etc/rc.conf</code>, 加入:
<code>
mysql_enable="YES"
nginx_enable="YES"
php_fpm_enable="YES"
</code>
這樣就可以啦~~~
如果有 phpmyadmin 的話，可以將該資料夾整個複製到網頁根目錄底下，就可以操作了~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[FreeBSD] FTP伺服器]]></title>
    <link href="http://kerkerj.github.io/blog/2010/10/04/freebsd-81-ftp/"/>
    <updated>2010-10-04T18:44:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2010/10/04/freebsd-81-ftp</id>
    <content type="html"><![CDATA[<p>FreeBSD 8.1 FTP伺服器 pureftp</p>

<p>安裝：</p>

<pre><code>#cd /usr/ports/ftp/pure-ftpd
#make install clean
</code></pre>

<p>FTP這玩意是要看個人需求而定的, 因此在這講好我的需求, 我架了網頁伺服器, 並且想讓網頁管理人員能夠用 FTP,   連上他的網頁目錄做上傳修改, 因此 FTP 不能是匿名使用者, 需要一個虛擬帳號, 而該虛擬帳號也必須要有權限能夠讀取到 apache 的網頁資料夾</p>

<p>下面即是我的過程安裝紀錄<br/>
建立一個 ftpgroup 群組及一個 ftpuser 使用者。<br/>
當作「系統帳號」 (就像www是apache建立來作為系統帳號用的意思一樣)</p>

<pre><code>#pw groupadd ftpgroup
#pw useradd ftpuser -g ftpgroup -d /dev/null -s /etc
</code></pre>

<p>接著要建立虛擬帳號<br/>
建立一個 &ldquo;kerker&#8221;，他的家目錄是 <code>/usr/local/www/apache22/data</code> (網頁伺服器的根目錄)<br/>
與 &#8220;kerker&rdquo; 相關的系統帳號是 &ldquo;ftpuser&rdquo;<br/>
<code># pure-pw useradd kerker -u 48 -g 48 -d/www/apache22/data -m</code></p>

<p>kerker為虛擬帳號<br/>
系統本身就有 apache 這 user, 這邊是當作虛擬使用者的群組</p>

<pre><code>-m，立即更新pureftpd.pdb檔 (or 建立)
-d，chroot user
-D，dont chroot user
</code></pre>

<p>接著修改 <code>/usr/local/etc/pure-ftpd.conf</code></p>

<pre><code># Minimum UID for an authenticated user to log in.
MinUID 14

PureDB      /usr/local/etc/pureftpd.pdb
</code></pre>

<p>修改此兩項後, 啟動ftp
<code>#/usr/local/etc/rc.d/pureftpd start</code>
即可使用FTP</p>

<p>Ref:
<a href="http://jakson.homeip.net/joomla/index.php?option=com_content&amp;view=article&amp;id=100:-ftp-pure-ftpd-&amp;catid=63:linux-program&amp;Itemid=121">http://jakson.homeip.net/joomla/index.php?option=com_content&amp;view=article&amp;id=100:-ftp-pure-ftpd-&amp;catid=63:linux-program&amp;Itemid=121</a><br/>
<a href="http://cloverhsc.blogspot.com/2008/11/freebsd-pure-ftpd1-orz.html">http://cloverhsc.blogspot.com/2008/11/freebsd-pure-ftpd1-orz.html</a><br/>
<a href="http://cloverhsc.blogspot.com/2008/01/pure-ftp.html">http://cloverhsc.blogspot.com/2008/01/pure-ftp.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[FreeBSD] FAMP]]></title>
    <link href="http://kerkerj.github.io/blog/2010/10/04/freebsd81-famp/"/>
    <updated>2010-10-04T18:25:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2010/10/04/freebsd81-famp</id>
    <content type="html"><![CDATA[<p>FAMP:
經典的網頁伺服器組合, 由FreeBSD, Apache, MySQL, PHP所組成 (使用Linux則稱為LAMP)
以下則是在FreeBSD安裝網頁伺服器的過程簡單紀錄及問題排解。</p>

<p>Env: FreeBSD 8.1　（以&#8221;此篇&#8221;安裝好的FreeBSD接續）
安裝順序為:MySQL-> Apache-> PHP-> PHP-extension -> phpMyAdmin</p>

<h1>MySQL</h1>

<pre><code>#cd /usr/ports/databases/mysql50-server  
#make WITH_CHARSET=utf8 WITH_XCHARSET=all WITH_COLLATION=utf8_unicode_ci BUILD_OPTIMIZED=yes instal clean
</code></pre>

<p>=>安裝 mysql server 並設定編碼為utf8</p>

<pre><code>#rehash
#sudo mysql_install_db (記得需要用root權限)
</code></pre>

<p>=>安裝資料庫</p>

<pre><code>#cp /usr/local/share/mysql/my-medium.cnf /etc/my.cnf  
</code></pre>

<p>=>複製設定檔</p>

<pre><code>#sudo chown -R mysql:mysql /var/db/mysql
</code></pre>

<p>=>變更mysql資料庫權限</p>

<pre><code>#sudo mysqld_safe &amp;  
</code></pre>

<p>=>初始啟動</p>

<pre><code>#sudo mysqladmin -u root -p password 'Your_password'
也可以是這樣
#sudo mysqladmin -u root passowrd 'Your_password'  
</code></pre>

<p>=>新增使用者 root , 前者會出現&#8221;Enter Password&#8221;, 就當做是confirm就好了</p>

<pre><code>#sudo mysql -u root
</code></pre>

<p>=>進入MySQL, 輸入剛剛設定的密碼即可</p>

<h1>Apache</h1>

<pre><code># cd /usr/ports/www/apache22
# make install clean
</code></pre>

<p>=>安裝apache 皆使用預設設定</p>

<h1>PHP</h1>

<pre><code># cd /usr/ports/lang/php5
# make config install clean
p.s.勾選 [X] APACHE Build Apache module
</code></pre>

<p>=>安裝php</p>

<pre><code># cd /usr/ports/lang/php5-extensions/
# make config install clean
</code></pre>

<p>=>安裝 php5-entensions, 勾選需要的extension</p>

<pre><code># cd /usr/local/etc
# cp php.ini-development php.ini
</code></pre>

<p>=>修改PHP設定檔</p>

<p>修改Apache設定檔:
編輯 <code>/usr/local/etc/apache22/httpd.conf</code>
加入:</p>

<pre><code>AddType application/x-httpd-php .php
AddType application/x-httpd-php-source .phps
</code></pre>

<p>將 <code>DirectoryIndex index.html</code>
修改成 <code>DirectoryIndex index.php index.html index.htm</code></p>

<p>*如果要變更網站檔案預設路徑的話請見附註</p>

<p>設定開機啟動Apache以及MySQL
編輯 <code>/etc/rc.conf</code>
加入:
<code>
apache22_enable="YES"
apache22_http_accept_enable="YES"
mysql_enable="YES"
</code></p>

<h1>phpMyAdmin</h1>

<pre><code># cd /usr/ports/databases/phpmyadmin
# make install clean
</code></pre>

<pre><code>Alias /phpmyadmin/ "/usr/local/www/phpMyAdmin/"  
 &lt;Directory "/usr/local/www/phpMyAdmin/"&gt;  
     Options Indexes FollowSymLinks  
     AllowOverride None  
     Order allow,deny  
     Allow from all  
 &lt;/Directory&gt;  
</code></pre>

<p>編輯 <code>httpd.conf</code>:</p>

<pre><code># cd /usr/local/www/phpmyadmin/
# cp config.sample.inc.php config.inc.php
# vim config.inc.php
</code></pre>

<p>=>編輯phpMyAdmin的設定檔</p>

<p>把這行 <code>$cfg['blowfish_secret'] = '';</code>
改成 <code>$cfg['blowfish_secret'] = 'aabbccdd'; //裡面的字串可以自己修改</code></p>

<p>重新啟動apache之後就可以連到 <code>http://你的網址/phpmyadmin/</code>看到 phpMyAdmin 的登入畫面
此時可以使用mysql的帳號密碼登入管理資料庫</p>

<h1>安裝後注意：</h1>

<p>啟動： <code>/usr/local/etc/rc.d/mysql-server start</code>
進入command line： <code>#/usr/local/bin/mysql mysql</code>
更改root密碼：</p>

<pre><code>UPDATE user SET password=password('你的密碼') where user='root';
FLUSH PRIVILEGES;
</code></pre>

<p>新增一使用者（完整權限，localhost登入), 再刪除root</p>

<hr />

<p>狀況A - 若啟動apache時出現以下狀況<br/>
<code>httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1 for ServerName</code></p>

<p>到 <code>httd.conf</code><br/>
找到 <code>#ServerName www.example.com:80</code><br/>
將註解刪除, 並將 <code>www.example.com</code> 改成自己的 domain
若是自己的測試機就改成 <code>localhost</code> , 這樣重新啟動即可</p>

<hr />

<p>狀況B:</p>

<pre><code class=""># mysql -u root -p  
Enter password:  
ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)  
</code></pre>

<pre><code># sudo /usr/local/etc/rc.d/mysql-server stop
# sudo mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;
# sudo mysql -u root mysql
mysql&gt; UPDATE user SET Password=PASSWORD('newpassword') where USER='root';
mysql&gt; FLUSH PRIVILEGES;
mysql&gt; quit

# sudo /usr/local/etc/rc.d/mysql-server restart
# mysql -u root -p
Enter password: &lt;輸入新設定的密碼&gt;

mysql&gt;
</code></pre>

<p>done!</p>

<hr />

<p>狀況C: 若遇上**警告提示</p>

<pre><code>Warning: phpinfo() [[function.phpinfo][1]]: It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected 'UTC' for '8.0/no DST' instead in **/.../index.php** on line **2  
</code></pre>

<p>通常是出現在5.3.0的版本<br/>
只要修改 <code>php.ini</code> , 加上 <code>'date'.timezone = "Asia/Taipei"</code> 即可解決!</p>

<hr />

<p>狀況D: 進入 phpmyadmin 時，出現 <code>無法讀取 mcrypt 模組,&lt;br /&gt;請檢查 PHP 設定</code></p>

<p>解決方法:<br/>
<code>vim config.inc.php</code><br/>
找出 <code>$cfg['Servers'][$i]['auth_type'] = 'cokies';</code><br/>
改成 <code>$cfg['Servers'][$i]['auth_type'] = 'http';</code><br/>
由原本網頁上面輸入帳號密碼變成跳出對話框來輸入帳號密碼</p>

<hr />

<p>補充:<br/>
更改apache的DocumentRoot<br/>
不想把文件放在 <code>/usr/local/www/apache22/data</code><br/>
想把他放在 <code>/home/www/</code><br/>
因此到 home 目錄去 mkdir 一個 www 資料夾<br/>
再到 <code>httpd.conf</code>, 更改兩個地方, 原本為</p>

<pre><code>DocumentRoot "/usr/local/www/apache22/data"
&lt;Directory "/usr/local/www/apache22/data"&gt;
</code></pre>

<p>改為</p>

<pre><code>DocumentRoot "/home/www/"  
&lt;Directory "/home/www/"&gt;  
</code></pre>

<p>這樣就會連到/home/www/去讀資料了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[FreeBSD] 8.1 基本安裝紀錄]]></title>
    <link href="http://kerkerj.github.io/blog/2010/09/15/freebsd-81/"/>
    <updated>2010-09-15T08:28:00+08:00</updated>
    <id>http://kerkerj.github.io/blog/2010/09/15/freebsd-81</id>
    <content type="html"><![CDATA[<p>FreeBSD 安裝 - FreeBSD 8.1<br/>
幾乎是整套SOP流程了 = = 乾脆寫起來查比較快, 自己都重灌不曉得幾百遍了
好站推薦：<a href="http://twbsd.org/cht/book/index.php">twbsd.org</a></p>

<h1>安裝系統：</h1>

<ol>
<li>選擇鍵盤配置</li>
<li>選擇Custom (可選DHCP)</li>
<li>在這裡只紀錄如何搞Label （以40GB為例)<br/>
     /    ：1GB<br/>
 swap ：512MB (也可以視情況而定)<br/>
 /usr ：10GB<br/>
 /tmp ：1GB<br/>
 /var ：5GB<br/>
 /home：其他剩下的空間</li>
<li>選擇CD/DVD安裝</li>
<li>commit 即可安裝完畢</li>
</ol>


<h1>登入後的一般設置：<a href="http://plog.longwin.com.tw/my_note-unix/2007/07/16/freebsd_initial_env_build_2007">一些基本套件語法等等可以看這裡</a></h1>

<p>先新增一使用者並加入wheel群組
(可有可無：將.vimrc及csh.cshrc分別放入家目錄及/etc/底下)</p>

<hr />

<p>設定時區: <code>#sysinstall</code>
選擇config -> Timezone -> 選擇時區</p>

<hr />

<p>設定網路: <code>#sysinstall</code>
選擇config -> networking -> 即可設定網路
會跳三個選項 - IPv6, DHCP, 選擇網路卡
前兩者可選可不選, 網卡以主要連線的為主 （反正應該都知道哪張是給FreeBSD連線的吧XD
之後作一點IP, gateway等等的設定即可</p>

<hr />

<p>更改開機設定檔:  <code>/etc/rc.conf</code>
加入: <code>sshd_enable="yes"</code></p>

<hr />

<p>套件安裝：
cd 到該套件的目錄底下
安裝前可先 <code>#make config</code> 來作設定
設定完再 <code>#make install clean</code></p>

<p>當第一次進行套件更新時會出現以下狀況：</p>

<pre><code># cd /usr/ports/
# make update
--------------------------------------------------------------
&gt;&gt;&gt; Running portsnap
--------------------------------------------------------------
Error: 'make update' uses portsnap(8) by default and
needs /usr/ports to be created by portsnap on its first run.

Please run 'portsnap fetch extract' first.
You can also define SUP_UPDATE and PORTSSUPFILE to use csup(1) or CVS_UPDATE to use cvs(1) for updating.
</code></pre>

<p>就照著他所說的下指令即可(此時必須要有網路狀態, 且過程有點久)：<br/>
<code># portsnap fetch extract</code></p>

<hr />

<p>設定make.conf
新增編輯 <code>/etc/make.conf</code><br/>
加入以下資料(更新時可以直接到台灣的ftp抓,速度快)</p>

<p>p.s.自從 FreeBSD 6.2 開始，系統就內建了 csup 這指令來更新 Ports，使用方法就和 cvsup 一樣, 省去非常久的時間在安裝 cvsup (因此cvsup-without-gui可裝可不裝，但還是要設定make.conf)</p>

<pre><code># for make install
MASTER_SITE_BACKUP?= \
ftp://ftp.tw.freebsd.org/pub/FreeBSD/distfiles/${DIST_SUBDIR}/\
ftp://ftp7.tw.freebsd.org/pub/FreeBSD/distfiles/${DIST_SUBDIR}/\
ftp://ftp8.tw.freebsd.org/pub/FreeBSD/distfiles/${DIST_SUBDIR}/\
ftp://freebsd.csie.ncu.edu.tw/distfiles/${DIST_SUBDIR}/\
ftp://freebsd.csie.nctu.edu.tw/pub/distfiles/${DIST_SUBDIR}/
MASTER_SITE_OVERRIDE?= ${MASTER_SITE_BACKUP}

# For CSUP make update
# SUPHOST 代表要到哪台 CSUP，假如你知道哪個伺服站離你的主機比較近，請改成離您
# 比較近的 Server 會有效率些。
# 目前可用的 cvsup.tw.FreeBSD.org, cvsup1.tw.FreeBSD.org .... 到
# cvsup14.tw.FreeBSD.org 可以選用。
# 在SUPFILE的部份
# 如果您是用 -stable，請用 stable-supfile
# 如果您是用 -current，請用 standard-supfile

SUP_UPDATE= yes
SUP= /usr/bin/csup
SUPFLAGS= -g -L 2
SUPHOST= cvsup.tw.FreeBSD.org
SUPFILE= /usr/share/examples/cvsup/standard-supfile
PORTSSUPFILE= /usr/share/examples/cvsup/ports-supfile
DOCSUPFILE= /usr/share/examples/cvsup/doc-supfile
</code></pre>

<p>即可到 port 作 <code>make update</code></p>

<p>設定 <code>/etc/crontab</code> 讓主機每 12 小時自動更新一次 port tree，以後每次都可以安裝到新的套件。</p>

<pre><code># echo '0 */12 * * * root cd /usr/ports; make update &amp;&amp; make fetchindex &gt;/dev/null 2&gt;&amp;1' &gt;&gt; /etc/crontab
</code></pre>

<hr />

<p>校正主機的時間</p>

<pre><code># ntpdate "stdtime.sinica.edu.tw"
</code></pre>

<p>然後設定 <code>/etc/crontab</code> 讓主機每 30 分鐘自動校時一次</p>

<pre><code># echo '*/30 * * * * root ntpdate "stdtime.sinica.edu.tw" &gt; /dev/null 2&gt;&amp;1 &gt;&gt; /etc/crontab
</code></pre>

<p>寫入 <code>&gt; /dev/null 2&gt;&amp;1</code> 後每次校時的結果便不會回報給系統管理員，可以減少看很多封回報通知信。</p>

<hr />

<p>基本套件： sudo, gnuls, vim, screen</p>

<pre><code>#cd /usr/ports/security/sudo   
#make install clean  
</code></pre>

<p>編輯 <code>/usr/local/etc/sudoers</code>
取消註解 <code>%wheel ALL=(ALL) ALL</code>
嫌麻煩也可以註解掉下面的 <code>NOPASSWD</code> 但是記得改回來 (若是正式機器)</p>

<pre><code>#cd/usr/ports/misc/gnuls
#make install clean
</code></pre>

<p>設定 <code>/etc/csh.cshrc</code> ( 或 user 家目錄下的 .cshrc )</p>

<pre><code>alias ls 'gnuls --color=auto --show-control-chars'
</code></pre>

<p>vim:</p>

<pre><code>#cd /usr/ports/editors/vim-lite  (或者可以裝vim6 不過會裝很久)
#make install clean
</code></pre>

<p>screen:</p>

<pre><code>#cd /usr/ports/sysutils/screen
#make install clean
</code></pre>

<hr />

<p>這些東西裝完就是一個平常使用的FreeBSD囉~</p>
]]></content>
  </entry>
  
</feed>
